{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mtoporek\\\\Documents\\\\studia\\\\serwisy e-learningowe\\\\zaliczenie\\\\client\\\\src\\\\pages\\\\QuizTaker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport styled from 'styled-components';\nimport { FiClock, FiCheck, FiX, FiArrowRight, FiArrowLeft } from 'react-icons/fi';\nimport axios from 'axios';\nimport { useTranslation } from '../context/TranslationContext';\nimport { useAuth } from '../context/AuthContext';\nimport { useColors } from '../context/ColorContext';\n\n// Konfiguracja axios\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.baseURL = 'http://localhost:5000';\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  padding-top: 90px;\n`;\n_c = Container;\nconst QuizCard = styled(motion.div)`\n  background: white;\n  border-radius: 16px;\n  padding: 32px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  border: 1px solid ${props => props.colors.primary}10;\n`;\n_c2 = QuizCard;\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 32px;\n  padding-bottom: 16px;\n  border-bottom: 2px solid ${props => props.colors.primary}10;\n`;\n_c3 = Header;\nconst Progress = styled.div`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${props => props.colors.primary};\n`;\n_c4 = Progress;\nconst Timer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${props => props.timeLeft < 30 ? '#dc3545' : props.colors.primary};\n`;\n_c5 = Timer;\nconst QuestionCard = styled.div`\n  margin-bottom: 32px;\n`;\n_c6 = QuestionCard;\nconst QuestionTitle = styled.h2`\n  font-size: 1.4rem;\n  font-weight: 600;\n  margin-bottom: 24px;\n  color: ${props => props.colors.text};\n  line-height: 1.5;\n`;\n_c7 = QuestionTitle;\nconst OptionsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n_c8 = OptionsList;\nconst OptionButton = styled.button`\n  padding: 16px 20px;\n  border: 2px solid #e9ecef;\n  border-radius: 12px;\n  background: white;\n  text-align: left;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  &:hover {\n    border-color: ${props => props.colors.primary};\n    background: ${props => props.colors.primary}05;\n    transform: translateY(-2px);\n  }\n\n  &.selected {\n    border-color: ${props => props.colors.primary};\n    background: ${props => props.colors.primary}10;\n  }\n\n  &.correct {\n    border-color: #28a745;\n    background: rgba(40, 167, 69, 0.1);\n  }\n\n  &.incorrect {\n    border-color: #dc3545;\n    background: rgba(220, 53, 69, 0.1);\n  }\n`;\n_c9 = OptionButton;\nconst NavigationButtons = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 32px;\n  padding-top: 24px;\n  border-top: 2px solid ${props => props.colors.primary}10;\n`;\n_c0 = NavigationButtons;\nconst NavButton = styled.button`\n  padding: 12px 24px;\n  border: none;\n  border-radius: 8px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &.primary {\n    background: ${props => props.gradient};\n    color: white;\n    box-shadow: 0 2px 8px ${props => props.colors.primary}30;\n\n    &:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 12px ${props => props.colors.primary}50;\n    }\n  }\n\n  &.secondary {\n    background: ${props => props.colors.background};\n    color: ${props => props.colors.text};\n    border: 2px solid #e9ecef;\n\n    &:hover {\n      background: #e9ecef;\n      transform: translateY(-2px);\n    }\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none !important;\n  }\n`;\n_c1 = NavButton;\nconst FinishButton = styled.button`\n  background: ${props => props.gradient};\n  color: white;\n  padding: 16px 32px;\n  border: none;\n  border-radius: 12px;\n  font-weight: 600;\n  font-size: 1.1rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  box-shadow: 0 2px 8px ${props => props.colors.primary}30;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px ${props => props.colors.primary}50;\n  }\n`;\n_c10 = FinishButton;\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 40px;\n  color: ${props => props.colors.textLight};\n  font-size: 1.1rem;\n`;\n_c11 = LoadingMessage;\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 40px;\n  color: #dc3545;\n  font-size: 1.1rem;\n`;\n_c12 = ErrorMessage;\nconst CheckboxContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n_c13 = CheckboxContainer;\nconst CheckboxOption = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 16px 20px;\n  border: 2px solid #e9ecef;\n  border-radius: 12px;\n  background: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-size: 1rem;\n\n  &:hover {\n    border-color: #667eea;\n    background: rgba(102, 126, 234, 0.05);\n    transform: translateY(-2px);\n  }\n\n  &.selected {\n    border-color: #667eea;\n    background: rgba(102, 126, 234, 0.1);\n  }\n\n  input[type=\"checkbox\"] {\n    width: 18px;\n    height: 18px;\n    accent-color: #667eea;\n  }\n`;\n_c14 = CheckboxOption;\nconst QuizTaker = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    user\n  } = useAuth();\n  const {\n    t,\n    updateKey\n  } = useTranslation();\n  const {\n    colors\n  } = useColors();\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showResults, setShowResults] = useState(false);\n  useEffect(() => {\n    fetchQuiz();\n  }, [id, updateKey]);\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            handleFinish();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [timeLeft]);\n  const fetchQuiz = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/quizzes/${id}`);\n      const quizData = response.data;\n      setQuiz(quizData);\n      setTimeLeft(quizData.timeLimit || 300); // 5 minut domyślnie\n      setError(null);\n    } catch (err) {\n      setError(t('Nie znaleziono quizu.'));\n      console.error('Error fetching quiz:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAnswerSelect = (questionId, optionId) => {\n    const currentQuestion = quiz.questions.find(q => q.id === questionId);\n    if (currentQuestion.type === 'single') {\n      // Pojedynczy wybór - zastąp poprzednią odpowiedź\n      setAnswers(prev => ({\n        ...prev,\n        [questionId]: optionId\n      }));\n    } else {\n      // Wielokrotny wybór - dodaj/usuń z listy\n      setAnswers(prev => {\n        const currentAnswers = prev[questionId] || [];\n        const isSelected = currentAnswers.includes(optionId);\n        if (isSelected) {\n          // Usuń odpowiedź\n          return {\n            ...prev,\n            [questionId]: currentAnswers.filter(a => a !== optionId)\n          };\n        } else {\n          // Dodaj odpowiedź\n          return {\n            ...prev,\n            [questionId]: [...currentAnswers, optionId]\n          };\n        }\n      });\n    }\n  };\n  const handleNext = () => {\n    if (currentQuestionIndex < quiz.questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n    }\n  };\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prev => prev - 1);\n    }\n  };\n  const handleFinish = async () => {\n    if (!user) {\n      alert(t('Musisz być zalogowany, aby zapisać wynik.'));\n      return;\n    }\n    try {\n      const score = calculateScore();\n      const result = {\n        quizId: quiz.id,\n        score: score.score,\n        percentage: score.percentage,\n        timeSpent: (quiz.timeLimit || 300) - timeLeft,\n        answers: answers\n      };\n      await axios.post('/api/results', result, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      navigate(`/results/${quiz.id}`, {\n        state: {\n          score: score.score,\n          total: quiz.questions.length,\n          percentage: score.percentage,\n          timeSpent: result.timeSpent\n        }\n      });\n    } catch (err) {\n      console.error('Error saving result:', err);\n      alert(t('Błąd podczas zapisywania wyniku.'));\n    }\n  };\n  const calculateScore = () => {\n    let correct = 0;\n    quiz.questions.forEach(question => {\n      const userAnswer = answers[question.id];\n      if (userAnswer) {\n        if (question.type === 'single' && question.correctAnswer) {\n          // Porównaj ID wybranej opcji z ID poprawnej odpowiedzi\n          if (userAnswer === question.correctAnswer) {\n            correct++;\n          }\n        } else if (question.type === 'multiple' && Array.isArray(question.correctAnswers)) {\n          const userAnswers = Array.isArray(userAnswer) ? userAnswer : [userAnswer];\n          const correctAnswers = question.correctAnswers || [];\n          // Porównaj ID wybranych opcji z ID poprawnych odpowiedzi\n          const lengthMatch = userAnswers.length === correctAnswers.length;\n          const allMatch = userAnswers.every(answerId => correctAnswers.includes(answerId));\n          if (lengthMatch && allMatch) {\n            correct++;\n          }\n        }\n      }\n    });\n    return {\n      score: correct,\n      percentage: Math.round(correct / quiz.questions.length * 100)\n    };\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(LoadingMessage, {\n        children: t('Ładowanie quizu...')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 7\n    }, this);\n  }\n  if (error || !quiz) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this);\n  }\n  const currentQuestion = quiz.questions[currentQuestionIndex];\n  const isLastQuestion = currentQuestionIndex === quiz.questions.length - 1;\n  const isFirstQuestion = currentQuestionIndex === 0;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(QuizCard, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      transition: {\n        duration: 0.5\n      },\n      colors: colors,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        colors: colors,\n        children: [/*#__PURE__*/_jsxDEV(Progress, {\n          colors: colors,\n          children: [t('Pytanie'), \" \", currentQuestionIndex + 1, \" z \", quiz.questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Timer, {\n          timeLeft: timeLeft,\n          colors: colors,\n          children: [/*#__PURE__*/_jsxDEV(FiClock, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 13\n          }, this), t('Pozostały czas'), \": \", formatTime(timeLeft)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestionCard, {\n        children: [/*#__PURE__*/_jsxDEV(QuestionTitle, {\n          colors: colors,\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), currentQuestion.type === 'single' ? /*#__PURE__*/_jsxDEV(OptionsList, {\n          children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(OptionButton, {\n            onClick: () => handleAnswerSelect(currentQuestion.id, option.id),\n            className: answers[currentQuestion.id] === option.id ? 'selected' : '',\n            colors: colors,\n            children: [answers[currentQuestion.id] === option.id ? /*#__PURE__*/_jsxDEV(FiCheck, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 64\n            }, this) : null, option.text]\n          }, option.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(CheckboxContainer, {\n          children: currentQuestion.options.map((option, index) => {\n            const currentAnswers = answers[currentQuestion.id] || [];\n            const isSelected = currentAnswers.includes(option.id);\n            return /*#__PURE__*/_jsxDEV(CheckboxOption, {\n              className: isSelected ? 'selected' : '',\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: isSelected,\n                onChange: () => handleAnswerSelect(currentQuestion.id, option.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 457,\n                columnNumber: 21\n              }, this), option.text]\n            }, option.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavigationButtons, {\n        colors: colors,\n        children: [/*#__PURE__*/_jsxDEV(NavButton, {\n          className: \"secondary\",\n          onClick: handlePrevious,\n          disabled: isFirstQuestion,\n          colors: colors,\n          children: [/*#__PURE__*/_jsxDEV(FiArrowLeft, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 477,\n            columnNumber: 13\n          }, this), t('Poprzednie')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this), isLastQuestion ? /*#__PURE__*/_jsxDEV(FinishButton, {\n          onClick: handleFinish,\n          colors: colors,\n          children: [/*#__PURE__*/_jsxDEV(FiCheck, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 15\n          }, this), t('Zakończ i sprawdź wynik')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(NavButton, {\n          className: \"primary\",\n          onClick: handleNext,\n          colors: colors,\n          children: [t('Następne'), /*#__PURE__*/_jsxDEV(FiArrowRight, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 412,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizTaker, \"i3TdfLugM8oFyX6OT0z3niee4nM=\", false, function () {\n  return [useParams, useNavigate, useAuth, useTranslation, useColors];\n});\n_c15 = QuizTaker;\nexport default QuizTaker;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"QuizCard\");\n$RefreshReg$(_c3, \"Header\");\n$RefreshReg$(_c4, \"Progress\");\n$RefreshReg$(_c5, \"Timer\");\n$RefreshReg$(_c6, \"QuestionCard\");\n$RefreshReg$(_c7, \"QuestionTitle\");\n$RefreshReg$(_c8, \"OptionsList\");\n$RefreshReg$(_c9, \"OptionButton\");\n$RefreshReg$(_c0, \"NavigationButtons\");\n$RefreshReg$(_c1, \"NavButton\");\n$RefreshReg$(_c10, \"FinishButton\");\n$RefreshReg$(_c11, \"LoadingMessage\");\n$RefreshReg$(_c12, \"ErrorMessage\");\n$RefreshReg$(_c13, \"CheckboxContainer\");\n$RefreshReg$(_c14, \"CheckboxOption\");\n$RefreshReg$(_c15, \"QuizTaker\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","motion","styled","FiClock","FiCheck","FiX","FiArrowRight","FiArrowLeft","axios","useTranslation","useAuth","useColors","jsxDEV","_jsxDEV","defaults","baseURL","Container","div","_c","QuizCard","props","colors","primary","_c2","Header","_c3","Progress","_c4","Timer","timeLeft","_c5","QuestionCard","_c6","QuestionTitle","h2","text","_c7","OptionsList","_c8","OptionButton","button","_c9","NavigationButtons","_c0","NavButton","gradient","background","_c1","FinishButton","_c10","LoadingMessage","textLight","_c11","ErrorMessage","_c12","CheckboxContainer","_c13","CheckboxOption","label","_c14","QuizTaker","_s","id","navigate","user","t","updateKey","quiz","setQuiz","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","setTimeLeft","loading","setLoading","error","setError","showResults","setShowResults","fetchQuiz","timer","setInterval","prev","handleFinish","clearInterval","response","get","quizData","data","timeLimit","err","console","handleAnswerSelect","questionId","optionId","currentQuestion","questions","find","q","type","currentAnswers","isSelected","includes","filter","a","handleNext","length","handlePrevious","alert","score","calculateScore","result","quizId","percentage","timeSpent","post","headers","Authorization","localStorage","getItem","state","total","correct","forEach","question","userAnswer","correctAnswer","Array","isArray","correctAnswers","userAnswers","lengthMatch","allMatch","every","answerId","Math","round","formatTime","seconds","mins","floor","secs","toString","padStart","children","fileName","_jsxFileName","lineNumber","columnNumber","isLastQuestion","isFirstQuestion","initial","opacity","y","animate","transition","duration","options","map","option","index","onClick","className","checked","onChange","disabled","_c15","$RefreshReg$"],"sources":["C:/Users/mtoporek/Documents/studia/serwisy e-learningowe/zaliczenie/client/src/pages/QuizTaker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport styled from 'styled-components';\nimport { FiClock, FiCheck, FiX, FiArrowRight, FiArrowLeft } from 'react-icons/fi';\nimport axios from 'axios';\nimport { useTranslation } from '../context/TranslationContext';\nimport { useAuth } from '../context/AuthContext';\nimport { useColors } from '../context/ColorContext';\n\n// Konfiguracja axios\naxios.defaults.baseURL = 'http://localhost:5000';\n\nconst Container = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  padding-top: 90px;\n`;\n\nconst QuizCard = styled(motion.div)`\n  background: white;\n  border-radius: 16px;\n  padding: 32px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n  border: 1px solid ${props => props.colors.primary}10;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 32px;\n  padding-bottom: 16px;\n  border-bottom: 2px solid ${props => props.colors.primary}10;\n`;\n\nconst Progress = styled.div`\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${props => props.colors.primary};\n`;\n\nconst Timer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-size: 1.1rem;\n  font-weight: 600;\n  color: ${props => props.timeLeft < 30 ? '#dc3545' : props.colors.primary};\n`;\n\nconst QuestionCard = styled.div`\n  margin-bottom: 32px;\n`;\n\nconst QuestionTitle = styled.h2`\n  font-size: 1.4rem;\n  font-weight: 600;\n  margin-bottom: 24px;\n  color: ${props => props.colors.text};\n  line-height: 1.5;\n`;\n\nconst OptionsList = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst OptionButton = styled.button`\n  padding: 16px 20px;\n  border: 2px solid #e9ecef;\n  border-radius: 12px;\n  background: white;\n  text-align: left;\n  font-size: 1rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n\n  &:hover {\n    border-color: ${props => props.colors.primary};\n    background: ${props => props.colors.primary}05;\n    transform: translateY(-2px);\n  }\n\n  &.selected {\n    border-color: ${props => props.colors.primary};\n    background: ${props => props.colors.primary}10;\n  }\n\n  &.correct {\n    border-color: #28a745;\n    background: rgba(40, 167, 69, 0.1);\n  }\n\n  &.incorrect {\n    border-color: #dc3545;\n    background: rgba(220, 53, 69, 0.1);\n  }\n`;\n\nconst NavigationButtons = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 32px;\n  padding-top: 24px;\n  border-top: 2px solid ${props => props.colors.primary}10;\n`;\n\nconst NavButton = styled.button`\n  padding: 12px 24px;\n  border: none;\n  border-radius: 8px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &.primary {\n    background: ${props => props.gradient};\n    color: white;\n    box-shadow: 0 2px 8px ${props => props.colors.primary}30;\n\n    &:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 12px ${props => props.colors.primary}50;\n    }\n  }\n\n  &.secondary {\n    background: ${props => props.colors.background};\n    color: ${props => props.colors.text};\n    border: 2px solid #e9ecef;\n\n    &:hover {\n      background: #e9ecef;\n      transform: translateY(-2px);\n    }\n  }\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n    transform: none !important;\n  }\n`;\n\nconst FinishButton = styled.button`\n  background: ${props => props.gradient};\n  color: white;\n  padding: 16px 32px;\n  border: none;\n  border-radius: 12px;\n  font-weight: 600;\n  font-size: 1.1rem;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  box-shadow: 0 2px 8px ${props => props.colors.primary}30;\n\n  &:hover {\n    transform: translateY(-2px);\n    box-shadow: 0 4px 12px ${props => props.colors.primary}50;\n  }\n`;\n\nconst LoadingMessage = styled.div`\n  text-align: center;\n  padding: 40px;\n  color: ${props => props.colors.textLight};\n  font-size: 1.1rem;\n`;\n\nconst ErrorMessage = styled.div`\n  text-align: center;\n  padding: 40px;\n  color: #dc3545;\n  font-size: 1.1rem;\n`;\n\nconst CheckboxContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n`;\n\nconst CheckboxOption = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 16px 20px;\n  border: 2px solid #e9ecef;\n  border-radius: 12px;\n  background: white;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-size: 1rem;\n\n  &:hover {\n    border-color: #667eea;\n    background: rgba(102, 126, 234, 0.05);\n    transform: translateY(-2px);\n  }\n\n  &.selected {\n    border-color: #667eea;\n    background: rgba(102, 126, 234, 0.1);\n  }\n\n  input[type=\"checkbox\"] {\n    width: 18px;\n    height: 18px;\n    accent-color: #667eea;\n  }\n`;\n\nconst QuizTaker = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const { user } = useAuth();\n  const { t, updateKey } = useTranslation();\n  const { colors } = useColors();\n  \n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState({});\n  const [timeLeft, setTimeLeft] = useState(0);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [showResults, setShowResults] = useState(false);\n\n  useEffect(() => {\n    fetchQuiz();\n  }, [id, updateKey]);\n\n  useEffect(() => {\n    if (timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1) {\n            handleFinish();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [timeLeft]);\n\n  const fetchQuiz = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`/api/quizzes/${id}`);\n      const quizData = response.data;\n      setQuiz(quizData);\n      setTimeLeft(quizData.timeLimit || 300); // 5 minut domyślnie\n      setError(null);\n    } catch (err) {\n      setError(t('Nie znaleziono quizu.'));\n      console.error('Error fetching quiz:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAnswerSelect = (questionId, optionId) => {\n    const currentQuestion = quiz.questions.find(q => q.id === questionId);\n    \n    if (currentQuestion.type === 'single') {\n      // Pojedynczy wybór - zastąp poprzednią odpowiedź\n      setAnswers(prev => ({\n        ...prev,\n        [questionId]: optionId\n      }));\n    } else {\n      // Wielokrotny wybór - dodaj/usuń z listy\n      setAnswers(prev => {\n        const currentAnswers = prev[questionId] || [];\n        const isSelected = currentAnswers.includes(optionId);\n        \n        if (isSelected) {\n          // Usuń odpowiedź\n          return {\n            ...prev,\n            [questionId]: currentAnswers.filter(a => a !== optionId)\n          };\n        } else {\n          // Dodaj odpowiedź\n          return {\n            ...prev,\n            [questionId]: [...currentAnswers, optionId]\n          };\n        }\n      });\n    }\n  };\n\n  const handleNext = () => {\n    if (currentQuestionIndex < quiz.questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n    }\n  };\n\n  const handlePrevious = () => {\n    if (currentQuestionIndex > 0) {\n      setCurrentQuestionIndex(prev => prev - 1);\n    }\n  };\n\n  const handleFinish = async () => {\n    if (!user) {\n      alert(t('Musisz być zalogowany, aby zapisać wynik.'));\n      return;\n    }\n\n    try {\n      const score = calculateScore();\n      const result = {\n        quizId: quiz.id,\n        score: score.score,\n        percentage: score.percentage,\n        timeSpent: (quiz.timeLimit || 300) - timeLeft,\n        answers: answers\n      };\n\n      await axios.post('/api/results', result, {\n        headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n      });\n\n      navigate(`/results/${quiz.id}`, { \n        state: { \n          score: score.score, \n          total: quiz.questions.length,\n          percentage: score.percentage,\n          timeSpent: result.timeSpent\n        } \n      });\n    } catch (err) {\n      console.error('Error saving result:', err);\n      alert(t('Błąd podczas zapisywania wyniku.'));\n    }\n  };\n\n  const calculateScore = () => {\n    let correct = 0;\n    \n    quiz.questions.forEach((question) => {\n      const userAnswer = answers[question.id];\n      \n      if (userAnswer) {\n        if (question.type === 'single' && question.correctAnswer) {\n          // Porównaj ID wybranej opcji z ID poprawnej odpowiedzi\n          if (userAnswer === question.correctAnswer) {\n            correct++;\n          }\n        } else if (question.type === 'multiple' && Array.isArray(question.correctAnswers)) {\n          const userAnswers = Array.isArray(userAnswer) ? userAnswer : [userAnswer];\n          const correctAnswers = question.correctAnswers || [];\n          // Porównaj ID wybranych opcji z ID poprawnych odpowiedzi\n          const lengthMatch = userAnswers.length === correctAnswers.length;\n          const allMatch = userAnswers.every(answerId => correctAnswers.includes(answerId));\n          if (lengthMatch && allMatch) {\n            correct++;\n          }\n        }\n      }\n    });\n    \n    return {\n      score: correct,\n      percentage: Math.round((correct / quiz.questions.length) * 100)\n    };\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  if (loading) {\n    return (\n      <Container>\n        <LoadingMessage>{t('Ładowanie quizu...')}</LoadingMessage>\n      </Container>\n    );\n  }\n\n  if (error || !quiz) {\n    return (\n      <Container>\n        <ErrorMessage>{error}</ErrorMessage>\n      </Container>\n    );\n  }\n\n  const currentQuestion = quiz.questions[currentQuestionIndex];\n  const isLastQuestion = currentQuestionIndex === quiz.questions.length - 1;\n  const isFirstQuestion = currentQuestionIndex === 0;\n\n  return (\n    <Container>\n      <QuizCard\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.5 }}\n        colors={colors}\n      >\n        <Header colors={colors}>\n          <Progress colors={colors}>\n            {t('Pytanie')} {currentQuestionIndex + 1} z {quiz.questions.length}\n          </Progress>\n          <Timer timeLeft={timeLeft} colors={colors}>\n            <FiClock />\n            {t('Pozostały czas')}: {formatTime(timeLeft)}\n          </Timer>\n        </Header>\n\n        <QuestionCard>\n          <QuestionTitle colors={colors}>{currentQuestion.question}</QuestionTitle>\n          \n          {currentQuestion.type === 'single' ? (\n            <OptionsList>\n              {currentQuestion.options.map((option, index) => (\n                <OptionButton\n                  key={option.id}\n                  onClick={() => handleAnswerSelect(currentQuestion.id, option.id)}\n                  className={answers[currentQuestion.id] === option.id ? 'selected' : ''}\n                  colors={colors}\n                >\n                  {answers[currentQuestion.id] === option.id ? <FiCheck /> : null}\n                  {option.text}\n                </OptionButton>\n              ))}\n            </OptionsList>\n          ) : (\n            <CheckboxContainer>\n              {currentQuestion.options.map((option, index) => {\n                const currentAnswers = answers[currentQuestion.id] || [];\n                const isSelected = currentAnswers.includes(option.id);\n                \n                return (\n                  <CheckboxOption\n                    key={option.id}\n                    className={isSelected ? 'selected' : ''}\n                  >\n                    <input\n                      type=\"checkbox\"\n                      checked={isSelected}\n                      onChange={() => handleAnswerSelect(currentQuestion.id, option.id)}\n                    />\n                    {option.text}\n                  </CheckboxOption>\n                );\n              })}\n            </CheckboxContainer>\n          )}\n        </QuestionCard>\n\n        <NavigationButtons colors={colors}>\n          <NavButton\n            className=\"secondary\"\n            onClick={handlePrevious}\n            disabled={isFirstQuestion}\n            colors={colors}\n          >\n            <FiArrowLeft />\n            {t('Poprzednie')}\n          </NavButton>\n\n          {isLastQuestion ? (\n            <FinishButton onClick={handleFinish} colors={colors}>\n              <FiCheck />\n              {t('Zakończ i sprawdź wynik')}\n            </FinishButton>\n          ) : (\n            <NavButton\n              className=\"primary\"\n              onClick={handleNext}\n              colors={colors}\n            >\n              {t('Następne')}\n              <FiArrowRight />\n            </NavButton>\n          )}\n        </NavigationButtons>\n      </QuizCard>\n    </Container>\n  );\n};\n\nexport default QuizTaker; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}